<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.springframework.samples.petclinic.Test6" time="1.363" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="git.tags" value=""/>
    <property name="java.specification.version" value="18"/>
    <property name="git.build.version" value="2.2.0.BUILD-SNAPSHOT"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/marioreyesapresa/DP1/2023-control2/target/test-classes:/Users/marioreyesapresa/DP1/2023-control2/target/classes:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.1.1/spring-boot-starter-cache-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/Users/marioreyesapresa/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/Users/marioreyesapresa/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/marioreyesapresa/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/marioreyesapresa/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/marioreyesapresa/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-context-support/6.0.10/spring-context-support-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/Users/marioreyesapresa/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/marioreyesapresa/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/Users/marioreyesapresa/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/marioreyesapresa/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/marioreyesapresa/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/Users/marioreyesapresa/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/Users/marioreyesapresa/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/Users/marioreyesapresa/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/Users/marioreyesapresa/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/marioreyesapresa/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/Users/marioreyesapresa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.1/spring-boot-starter-validation-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/Users/marioreyesapresa/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/Users/marioreyesapresa/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.1/spring-boot-starter-security-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-config/6.1.1/spring-security-config-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-web/6.1.1/spring-security-web-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-taglibs/6.1.1/spring-security-taglibs-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-acl/6.1.1/spring-security-acl-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-core/6.1.1/spring-security-core-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-crypto/6.1.1/spring-security-crypto-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.1.1/spring-boot-starter-actuator-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.1.1/spring-boot-actuator-autoconfigure-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-actuator/3.1.1/spring-boot-actuator-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/Users/marioreyesapresa/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/Users/marioreyesapresa/.m2/repository/io/micrometer/micrometer-core/1.11.1/micrometer-core-1.11.1.jar:/Users/marioreyesapresa/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/marioreyesapresa/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/marioreyesapresa/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/marioreyesapresa/.m2/repository/javax/cache/cache-api/1.1.1/cache-api-1.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/marioreyesapresa/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/marioreyesapresa/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/marioreyesapresa/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/Users/marioreyesapresa/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/Users/marioreyesapresa/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/marioreyesapresa/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/marioreyesapresa/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/marioreyesapresa/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/marioreyesapresa/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/Users/marioreyesapresa/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/marioreyesapresa/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/marioreyesapresa/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/marioreyesapresa/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-test/6.1.1/spring-security-test-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/marioreyesapresa/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/marioreyesapresa/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.1/spring-boot-devtools-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot/3.1.1/spring-boot-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/io/jsonwebtoken/jjwt/0.9.1/jjwt-0.9.1.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/org/json/json/20230227/json-20230227.jar:/Users/marioreyesapresa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/Users/marioreyesapresa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/Users/marioreyesapresa/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.1.0/springdoc-openapi-starter-common-2.1.0.jar:/Users/marioreyesapresa/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.9/swagger-core-jakarta-2.2.9.jar:/Users/marioreyesapresa/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/Users/marioreyesapresa/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.9/swagger-annotations-jakarta-2.2.9.jar:/Users/marioreyesapresa/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.9/swagger-models-jakarta-2.2.9.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.2/jackson-dataformat-yaml-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/org/webjars/swagger-ui/4.18.2/swagger-ui-4.18.2.jar:/Users/marioreyesapresa/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/marioreyesapresa/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/marioreyesapresa/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.4/jaxb-impl-2.3.4.jar:/Users/marioreyesapresa/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/marioreyesapresa/.m2/repository/org/apache/maven/maven-model/3.9.4/maven-model-3.9.4.jar:/Users/marioreyesapresa/.m2/repository/org/codehaus/plexus/plexus-utils/3.5.1/plexus-utils-3.5.1.jar:"/>
    <property name="git.branch" value="main"/>
    <property name="git.build.host" value="MacBook-Pro-de-Mario.local"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="git.commit.id" value="020e3adf97e743ed5a33b2a857734ac2c6578d48"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Madrid"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="java.vm.specification.version" value="18"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="git.commit.author.time" value="2024-12-16T11:56:53+0100"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="ES"/>
    <property name="git.build.user.name" value="marioreyesapresa"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-18.0.1.1.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/marioreyesapresa/DP1/2023-control2/target/surefire/surefirebooter-20241216121823583_3.jar /Users/marioreyesapresa/DP1/2023-control2/target/surefire 2024-12-16T12-18-23_496-jvmRun1 surefire-20241216121823583_1tmp surefire_0-20241216121823583_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/marioreyesapresa/DP1/2023-control2/target/test-classes:/Users/marioreyesapresa/DP1/2023-control2/target/classes:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.1.1/spring-boot-starter-cache-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/Users/marioreyesapresa/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/Users/marioreyesapresa/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/marioreyesapresa/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/marioreyesapresa/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/marioreyesapresa/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-context-support/6.0.10/spring-context-support-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/Users/marioreyesapresa/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/marioreyesapresa/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/Users/marioreyesapresa/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/marioreyesapresa/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/marioreyesapresa/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/Users/marioreyesapresa/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/Users/marioreyesapresa/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/Users/marioreyesapresa/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/Users/marioreyesapresa/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/marioreyesapresa/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/marioreyesapresa/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/Users/marioreyesapresa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.1/spring-boot-starter-validation-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/Users/marioreyesapresa/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.0.Final/hibernate-validator-8.0.0.Final.jar:/Users/marioreyesapresa/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.1/spring-boot-starter-security-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-config/6.1.1/spring-security-config-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-web/6.1.1/spring-security-web-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-taglibs/6.1.1/spring-security-taglibs-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-acl/6.1.1/spring-security-acl-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-core/6.1.1/spring-security-core-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-crypto/6.1.1/spring-security-crypto-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.1.1/spring-boot-starter-actuator-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.1.1/spring-boot-actuator-autoconfigure-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-actuator/3.1.1/spring-boot-actuator-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/Users/marioreyesapresa/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/Users/marioreyesapresa/.m2/repository/io/micrometer/micrometer-core/1.11.1/micrometer-core-1.11.1.jar:/Users/marioreyesapresa/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/marioreyesapresa/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/marioreyesapresa/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/marioreyesapresa/.m2/repository/javax/cache/cache-api/1.1.1/cache-api-1.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/marioreyesapresa/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/marioreyesapresa/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/marioreyesapresa/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/Users/marioreyesapresa/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/Users/marioreyesapresa/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/marioreyesapresa/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/marioreyesapresa/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/marioreyesapresa/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/marioreyesapresa/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/marioreyesapresa/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/Users/marioreyesapresa/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/marioreyesapresa/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/marioreyesapresa/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/marioreyesapresa/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/Users/marioreyesapresa/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/security/spring-security-test/6.1.1/spring-security-test-6.1.1.jar:/Users/marioreyesapresa/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/marioreyesapresa/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/marioreyesapresa/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.1/spring-boot-devtools-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot/3.1.1/spring-boot-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/Users/marioreyesapresa/.m2/repository/io/jsonwebtoken/jjwt/0.9.1/jjwt-0.9.1.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/org/json/json/20230227/json-20230227.jar:/Users/marioreyesapresa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/Users/marioreyesapresa/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/Users/marioreyesapresa/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.1.0/springdoc-openapi-starter-common-2.1.0.jar:/Users/marioreyesapresa/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.9/swagger-core-jakarta-2.2.9.jar:/Users/marioreyesapresa/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/Users/marioreyesapresa/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.9/swagger-annotations-jakarta-2.2.9.jar:/Users/marioreyesapresa/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.9/swagger-models-jakarta-2.2.9.jar:/Users/marioreyesapresa/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.2/jackson-dataformat-yaml-2.15.2.jar:/Users/marioreyesapresa/.m2/repository/org/webjars/swagger-ui/4.18.2/swagger-ui-4.18.2.jar:/Users/marioreyesapresa/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/marioreyesapresa/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/marioreyesapresa/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.4/jaxb-impl-2.3.4.jar:/Users/marioreyesapresa/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/marioreyesapresa/.m2/repository/org/apache/maven/maven-model/3.9.4/maven-model-3.9.4.jar:/Users/marioreyesapresa/.m2/repository/org/codehaus/plexus/plexus-utils/3.5.1/plexus-utils-3.5.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/marioreyesapresa"/>
    <property name="user.language" value="es"/>
    <property name="git.closest.tag.commit.count" value=""/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-04-22"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-18.0.1.1.jdk/Contents/Home"/>
    <property name="git.total.commit.count" value="1"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/marioreyesapresa/DP1/2023-control2"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="git.commit.committer.time" value="2024-12-16T11:56:53+0100"/>
    <property name="git.build.user.email" value="marreyapr@alum.us.es"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="git.closest.tag.name" value=""/>
    <property name="git.local.branch.ahead" value="0"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="git.build.time" value="2024-12-16T12:18:18+0100"/>
    <property name="surefire.real.class.path" value="/Users/marioreyesapresa/DP1/2023-control2/target/surefire/surefirebooter-20241216121823583_3.jar"/>
    <property name="git.commit.message.full" value="commit inicial"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="18.0.1.1+2-6"/>
    <property name="user.name" value="marioreyesapresa"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.1"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="git.commit.user.email" value="marreyapr@alum.us.es"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="git.local.branch.behind" value="0"/>
    <property name="git.dirty" value="true"/>
    <property name="localRepository" value="/Users/marioreyesapresa/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/j4/19ph1mb13r78k935g6glkshc0000gn/T/"/>
    <property name="java.version" value="18.0.1.1"/>
    <property name="user.dir" value="/Users/marioreyesapresa/DP1/2023-control2"/>
    <property name="os.arch" value="x86_64"/>
    <property name="git.commit.user.name" value="marioreyesapresa"/>
    <property name="git.commit.id.abbrev" value="020e3ad"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="36854"/>
    <property name="git.commit.id.describe-short" value="020e3ad-dirty"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="git.commit.id.describe" value="020e3ad-dirty"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/marioreyesapresa/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="git.commit.message.short" value="commit inicial"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="18.0.1.1+2-6"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="62.0"/>
    <property name="git.commit.time" value="2024-12-16T11:56:53+0100"/>
    <property name="git.remote.origin.url" value="https://github.com/marioreyesapresa/2023-control2.git"/>
  </properties>
  <testcase name="test" classname="org.springframework.samples.petclinic.Test6" time="0.234">
    <system-out><![CDATA[2024-12-16T12:18:37.556+01:00  INFO 36854 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.springframework.samples.petclinic.Test6]: Test6 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-12-16T12:18:37.568+01:00  INFO 36854 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.Test6


              |\      _,,,--,,_
             /,`.-'`'   ._  \-;;,_
  _______ __|,4-  ) )_   .;.(__`'-'__     ___ __    _ ___ _______
 |       | '---''(_/._)-'(_\_)   |   |   |   |  |  | |   |       |
 |    _  |    ___|_     _|       |   |   |   |   |_| |   |       | __ _ _
 |   |_| |   |___  |   | |       |   |   |   |       |   |       | \ \ \ \
 |    ___|    ___| |   | |      _|   |___|   |  _    |   |      _|  \ \ \ \
 |   |   |   |___  |   | |     |_|       |   | | |   |   |     |_    ) ) ) )
 |___|   |_______| |___| |_______|_______|___|_|  |__|___|_______|  / / / /
 ==================================================================/_/_/_/

:: Built with Spring Boot :: 3.1.1


2024-12-16T12:18:37.607+01:00  WARN 36854 --- [           main] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/marioreyesapresa/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/Users/marioreyesapresa/.m2/repository/org/json/json/20230227/json-20230227.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2024-12-16T12:18:37.608+01:00  INFO 36854 --- [           main] o.s.samples.petclinic.Test6              : Starting Test6 using Java 18.0.1.1 with PID 36854 (started by marioreyesapresa in /Users/marioreyesapresa/DP1/2023-control2)
2024-12-16T12:18:37.609+01:00  INFO 36854 --- [           main] o.s.samples.petclinic.Test6              : No active profile set, falling back to 1 default profile: "default"
2024-12-16T12:18:37.789+01:00  INFO 36854 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-16T12:18:37.828+01:00  INFO 36854 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 39 ms. Found 14 JPA repository interfaces.
2024-12-16T12:18:37.855+01:00  INFO 36854 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2024-12-16T12:18:37.871+01:00  INFO 36854 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:d20ffef1-4584-4795-a533-fa519af54cea;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2024-12-16T12:18:37.900+01:00  INFO 36854 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-16T12:18:37.907+01:00  INFO 36854 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2024-12-16T12:18:37.907+01:00  INFO 36854 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-16T12:18:37.966+01:00  INFO 36854 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2024-12-16T12:18:38.250+01:00  INFO 36854 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists appusers cascade 
Hibernate: 
    drop table if exists authorities cascade 
Hibernate: 
    drop table if exists clinic_owners cascade 
Hibernate: 
    drop table if exists clinics cascade 
Hibernate: 
    drop table if exists consultation_tickets cascade 
Hibernate: 
    drop table if exists consultations cascade 
Hibernate: 
    drop table if exists operating_rooms cascade 
Hibernate: 
    drop table if exists operating_rooms_valid_for cascade 
Hibernate: 
    drop table if exists owners cascade 
Hibernate: 
    drop table if exists pets cascade 
Hibernate: 
    drop table if exists pets_surgeries cascade 
Hibernate: 
    drop table if exists specialties cascade 
Hibernate: 
    drop table if exists surgeries cascade 
Hibernate: 
    drop table if exists surgeries_surgery_team cascade 
Hibernate: 
    drop table if exists surgery_type cascade 
Hibernate: 
    drop table if exists surgery_type_susceptible_pet_types cascade 
Hibernate: 
    drop table if exists types cascade 
Hibernate: 
    drop table if exists vets cascade 
Hibernate: 
    drop table if exists visits cascade 
Hibernate: 
    drop sequence if exists entity_sequence
Hibernate: 
    create sequence entity_sequence start with 100 increment by 50
Hibernate: 
    create table appusers (
        authority integer not null,
        id integer not null,
        password varchar(255),
        username varchar(255) unique,
        primary key (id)
    )
Hibernate: 
    create table authorities (
        id integer not null,
        authority varchar(20),
        primary key (id)
    )
Hibernate: 
    create table clinic_owners (
        id integer not null,
        user_id integer unique,
        first_name varchar(255),
        last_name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table clinics (
        clinic_owner integer,
        id integer not null,
        address varchar(255),
        name varchar(255),
        plan varchar(255) not null check (plan in ('BASIC','GOLD','PLATINUM')),
        telephone varchar(255),
        primary key (id)
    )
Hibernate: 
    create table consultation_tickets (
        consultation_id integer not null,
        id integer not null,
        user_id integer not null,
        creation_date timestamp(6),
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    create table consultations (
        id integer not null,
        is_clinic_comment boolean not null,
        owner_id integer not null,
        pet_id integer,
        creation_date timestamp(6),
        status varchar(255) not null check (status in ('PENDING','ANSWERED','CLOSED')),
        title varchar(255),
        primary key (id)
    )
Hibernate: 
    create table operating_rooms (
        id integer not null,
        name varchar(50),
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    create table operating_rooms_valid_for (
        operating_room_id integer not null,
        valid_for_id integer not null,
        primary key (operating_room_id, valid_for_id)
    )
Hibernate: 
    create table owners (
        clinic integer,
        id integer not null,
        user_id integer unique,
        address varchar(255),
        city varchar(255),
        first_name varchar(255),
        last_name varchar(255),
        telephone varchar(255),
        primary key (id)
    )
Hibernate: 
    create table pets (
        birth_date date,
        id integer not null,
        owner_id integer,
        type_id integer not null,
        name varchar(50),
        primary key (id)
    )
Hibernate: 
    create table pets_surgeries (
        pet_id integer not null,
        surgeries_id integer not null unique,
        primary key (pet_id, surgeries_id)
    )
Hibernate: 
    create table specialties (
        id integer not null,
        name varchar(50),
        primary key (id)
    )
Hibernate: 
    create table surgeries (
        id integer not null,
        room_id integer not null,
        surgery_date date not null,
        name varchar(50),
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    create table surgeries_surgery_team (
        surgery_id integer not null,
        surgery_team_id integer not null,
        primary key (surgery_id, surgery_team_id)
    )
Hibernate: 
    create table surgery_type (
        id integer not null,
        name varchar(50),
        primary key (id)
    )
Hibernate: 
    create table surgery_type_susceptible_pet_types (
        surgery_type_id integer not null,
        susceptible_pet_types_id integer not null,
        primary key (surgery_type_id, susceptible_pet_types_id)
    )
Hibernate: 
    create table types (
        id integer not null,
        name varchar(50),
        primary key (id)
    )
Hibernate: 
    create table vets (
        clinic integer,
        id integer not null,
        specialty_id integer,
        user_id integer unique,
        city varchar(255),
        first_name varchar(255),
        last_name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table visits (
        id integer not null,
        pet_id integer,
        recommends_id integer,
        vet_id integer not null,
        visit_date_time timestamp(6),
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists appusers 
       add constraint FKgqebgjja4fdf7rww08icgsqmh 
       foreign key (authority) 
       references authorities
Hibernate: 
    alter table if exists clinic_owners 
       add constraint FKcbs34rs1txgav9j71q7lr14wr 
       foreign key (user_id) 
       references appusers 
       on delete cascade
Hibernate: 
    alter table if exists clinics 
       add constraint FKfo6i4owjm1gqfwal98nwgt7ne 
       foreign key (clinic_owner) 
       references clinic_owners 
       on delete cascade
Hibernate: 
    alter table if exists consultation_tickets 
       add constraint FKt3l8ba6gpdfikmpsh5wx76e6h 
       foreign key (consultation_id) 
       references consultations 
       on delete cascade
Hibernate: 
    alter table if exists consultation_tickets 
       add constraint FKbp301erbrnmul0mep92t4nohg 
       foreign key (user_id) 
       references appusers 
       on delete cascade
Hibernate: 
    alter table if exists consultations 
       add constraint FK3l5xlwv6xtgcgrcdm70g8hb37 
       foreign key (owner_id) 
       references owners
Hibernate: 
    alter table if exists consultations 
       add constraint FK1u4ifl4aogb549rkac3xqbm60 
       foreign key (pet_id) 
       references pets
Hibernate: 
    alter table if exists operating_rooms_valid_for 
       add constraint FKdeaj6wytb0ov16l5ndj8fl503 
       foreign key (valid_for_id) 
       references types
Hibernate: 
    alter table if exists operating_rooms_valid_for 
       add constraint FK7cfm2xmpncxx7ce80cfhvogbb 
       foreign key (operating_room_id) 
       references operating_rooms
Hibernate: 
    alter table if exists owners 
       add constraint FK3tegy5hpqm07u36bpi70uqvrl 
       foreign key (clinic) 
       references clinics 
       on delete cascade
Hibernate: 
    alter table if exists owners 
       add constraint FKivtnuuio2xfaga7bxv7o4oj36 
       foreign key (user_id) 
       references appusers 
       on delete cascade
Hibernate: 
    alter table if exists pets 
       add constraint FK6teg4kcjcnjhduguft56wcfoa 
       foreign key (owner_id) 
       references owners 
       on delete cascade
Hibernate: 
    alter table if exists pets 
       add constraint FKtmmh1tq8pah5vxf8kuqqplo4p 
       foreign key (type_id) 
       references types
Hibernate: 
    alter table if exists pets_surgeries 
       add constraint FK2peuqs4rpy0pkb37ddmk3wj4y 
       foreign key (surgeries_id) 
       references surgeries
Hibernate: 
    alter table if exists pets_surgeries 
       add constraint FKcf0gso8g13gf9bvi9qavit3n3 
       foreign key (pet_id) 
       references pets
Hibernate: 
    alter table if exists surgeries 
       add constraint FKpgig5csejnb54xjtxj7x6gtb5 
       foreign key (room_id) 
       references operating_rooms
Hibernate: 
    alter table if exists surgeries_surgery_team 
       add constraint FK9vbt5j138sqma2bh1wq0jfgxg 
       foreign key (surgery_team_id) 
       references vets
Hibernate: 
    alter table if exists surgeries_surgery_team 
       add constraint FKnrr8ewtitcccmjmgvoeocct8a 
       foreign key (surgery_id) 
       references surgeries
Hibernate: 
    alter table if exists surgery_type_susceptible_pet_types 
       add constraint FKd65i9h29aw9yry9jmwx9lpjl 
       foreign key (susceptible_pet_types_id) 
       references types
Hibernate: 
    alter table if exists surgery_type_susceptible_pet_types 
       add constraint FKh4arto0d56n4602x2asltmebi 
       foreign key (surgery_type_id) 
       references surgery_type
Hibernate: 
    alter table if exists vets 
       add constraint FK2p0tbc3ckxffr5b9in4umxfy8 
       foreign key (clinic) 
       references clinics
Hibernate: 
    alter table if exists vets 
       add constraint FK9f98bhmngex4rse2j040er3na 
       foreign key (specialty_id) 
       references specialties
Hibernate: 
    alter table if exists vets 
       add constraint FK5nwjcgpnlqwu01x2qm0ixk9n7 
       foreign key (user_id) 
       references appusers
Hibernate: 
    alter table if exists visits 
       add constraint FK6jcifhlqqlsfseu67utlouauy 
       foreign key (pet_id) 
       references pets 
       on delete cascade
Hibernate: 
    alter table if exists visits 
       add constraint FK28q10dsvj2k4pmtvvc2d3ma85 
       foreign key (recommends_id) 
       references surgery_type
Hibernate: 
    alter table if exists visits 
       add constraint FK8036qgt84d8h5cckxrj952qoe 
       foreign key (vet_id) 
       references vets 
       on delete cascade
2024-12-16T12:18:38.322+01:00  INFO 36854 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-16T12:18:38.676+01:00  INFO 36854 --- [           main] o.s.samples.petclinic.Test6              : Started Test6 in 1.103 seconds (process running for 14.929)
Hibernate: 
    select
        p1_0.id,
        p1_0.name 
    from
        types p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.name 
    from
        types p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.name 
    from
        types p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    from
        vets v1_0 
    join
        visits v2_0 
            on v1_0.id=v2_0.vet_id 
    join
        pets p1_0 
            on p1_0.id=v2_0.pet_id 
    where
        v2_0.visit_date_time between ? and ? 
        and p1_0.type_id in (?,?) 
    group by
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    having
        count(v2_0.id)>=?
Hibernate: 
    select
        c1_0.id,
        c1_0.address,
        c2_0.id,
        c2_0.first_name,
        c2_0.last_name,
        u1_0.id,
        u1_0.authority,
        a1_0.id,
        a1_0.authority,
        u1_0.password,
        u1_0.username,
        c1_0.name,
        c1_0.plan,
        c1_0.telephone 
    from
        clinics c1_0 
    left join
        clinic_owners c2_0 
            on c2_0.id=c1_0.clinic_owner 
    left join
        appusers u1_0 
            on u1_0.id=c2_0.user_id 
    left join
        authorities a1_0 
            on a1_0.id=u1_0.authority 
    where
        c1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.name 
    from
        specialties s1_0 
    where
        s1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.authority,
        a1_0.id,
        a1_0.authority,
        u1_0.password,
        u1_0.username 
    from
        appusers u1_0 
    join
        authorities a1_0 
            on a1_0.id=u1_0.authority 
    where
        u1_0.id=?
Hibernate: 
    select
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    from
        vets v1_0 
    join
        visits v2_0 
            on v1_0.id=v2_0.vet_id 
    join
        pets p1_0 
            on p1_0.id=v2_0.pet_id 
    where
        v2_0.visit_date_time between ? and ? 
        and p1_0.type_id in (?,?) 
    group by
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    having
        count(v2_0.id)>=?
Hibernate: 
    select
        c1_0.id,
        c1_0.address,
        c2_0.id,
        c2_0.first_name,
        c2_0.last_name,
        u1_0.id,
        u1_0.authority,
        a1_0.id,
        a1_0.authority,
        u1_0.password,
        u1_0.username,
        c1_0.name,
        c1_0.plan,
        c1_0.telephone 
    from
        clinics c1_0 
    left join
        clinic_owners c2_0 
            on c2_0.id=c1_0.clinic_owner 
    left join
        appusers u1_0 
            on u1_0.id=c2_0.user_id 
    left join
        authorities a1_0 
            on a1_0.id=u1_0.authority 
    where
        c1_0.id=?
Hibernate: 
    select
        s1_0.id,
        s1_0.name 
    from
        specialties s1_0 
    where
        s1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.authority,
        a1_0.id,
        a1_0.authority,
        u1_0.password,
        u1_0.username 
    from
        appusers u1_0 
    join
        authorities a1_0 
            on a1_0.id=u1_0.authority 
    where
        u1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.address,
        c2_0.id,
        c2_0.first_name,
        c2_0.last_name,
        u1_0.id,
        u1_0.authority,
        a1_0.id,
        a1_0.authority,
        u1_0.password,
        u1_0.username,
        c1_0.name,
        c1_0.plan,
        c1_0.telephone 
    from
        clinics c1_0 
    left join
        clinic_owners c2_0 
            on c2_0.id=c1_0.clinic_owner 
    left join
        appusers u1_0 
            on u1_0.id=c2_0.user_id 
    left join
        authorities a1_0 
            on a1_0.id=u1_0.authority 
    where
        c1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.authority,
        a1_0.id,
        a1_0.authority,
        u1_0.password,
        u1_0.username 
    from
        appusers u1_0 
    join
        authorities a1_0 
            on a1_0.id=u1_0.authority 
    where
        u1_0.id=?
Hibernate: 
    select
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    from
        vets v1_0 
    join
        visits v2_0 
            on v1_0.id=v2_0.vet_id 
    join
        pets p1_0 
            on p1_0.id=v2_0.pet_id 
    where
        v2_0.visit_date_time between ? and ? 
        and p1_0.type_id in (?,?) 
    group by
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    having
        count(v2_0.id)>=?
Hibernate: 
    select
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    from
        vets v1_0 
    join
        visits v2_0 
            on v1_0.id=v2_0.vet_id 
    join
        pets p1_0 
            on p1_0.id=v2_0.pet_id 
    where
        v2_0.visit_date_time between ? and ? 
        and p1_0.type_id in (?,?) 
    group by
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    having
        count(v2_0.id)>=?
Hibernate: 
    select
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    from
        vets v1_0 
    join
        visits v2_0 
            on v1_0.id=v2_0.vet_id 
    join
        pets p1_0 
            on p1_0.id=v2_0.pet_id 
    where
        v2_0.visit_date_time between ? and ? 
        and p1_0.type_id in (?) 
    group by
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    having
        count(v2_0.id)>=?
Hibernate: 
    select
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    from
        vets v1_0 
    join
        visits v2_0 
            on v1_0.id=v2_0.vet_id 
    join
        pets p1_0 
            on p1_0.id=v2_0.pet_id 
    where
        v2_0.visit_date_time between ? and ? 
        and p1_0.type_id in (?) 
    group by
        v1_0.id,
        v1_0.city,
        v1_0.clinic,
        v1_0.first_name,
        v1_0.last_name,
        v1_0.specialty_id,
        v1_0.user_id 
    having
        count(v2_0.id)>=?
]]></system-out>
  </testcase>
</testsuite>